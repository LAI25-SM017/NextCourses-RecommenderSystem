{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyNQrOY68pxn5AiFwMWv10Aa"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"fKADPWcFKlj3"},"source":["# **1. Import Library**"]},{"cell_type":"code","execution_count":105,"metadata":{"id":"NLEFhKpwWDsp","executionInfo":{"status":"ok","timestamp":1749490280696,"user_tz":-420,"elapsed":318,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"outputs":[],"source":["# !pip install tensorflow_recommenders"]},{"cell_type":"code","source":["# !pip install tensorflow==2.15.0"],"metadata":{"id":"BUVjpGgnfMrd","executionInfo":{"status":"ok","timestamp":1749490280730,"user_tz":-420,"elapsed":13,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":106,"outputs":[]},{"cell_type":"code","source":["import tensorflow as tf\n","print(tf.__version__)\n","print(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gS5ZBGmZiqyh","outputId":"f87ac929-70fa-4c8b-dbe0-dcdff288878b","executionInfo":{"status":"ok","timestamp":1749490280766,"user_tz":-420,"elapsed":21,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":107,"outputs":[{"output_type":"stream","name":"stdout","text":["2.15.0\n","Num GPUs Available:  0\n"]}]},{"cell_type":"code","execution_count":108,"metadata":{"id":"BlmvjLY9M4Yj","executionInfo":{"status":"ok","timestamp":1749490280822,"user_tz":-420,"elapsed":15,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"outputs":[],"source":["# Standard Libraries\n","import os\n","import time\n","import random\n","import pickle\n","from collections import Counter\n","import difflib\n","\n","# Seed Setup\n","import numpy as np\n","np.random.seed(0)  # Set seed sebelum pengacakan\n","\n","# Data Manipulation & Preprocessing\n","import pandas as pd\n","from sklearn.metrics.pairwise import cosine_similarity\n","from sklearn.metrics import ndcg_score\n","\n","# Deep Learning & Modeling\n","import tensorflow as tf\n","import tensorflow_recommenders as tfrs\n","from tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau, ModelCheckpoint\n","\n","# Visualization\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import plotly.express as px\n","\n","# Pandas Configuration\n","pd.set_option('display.max_columns', None)\n","# pd.set_option('display.max_rows', None)\n","pd.set_option(\"display.float_format\", lambda x: \"%.4f\" % x)\n","\n","# Warnings Configuration\n","import warnings\n","warnings.filterwarnings(\"ignore\")"]},{"cell_type":"code","source":["import os\n","os.environ['TF_USE_LEGACY_KERAS'] = '1'"],"metadata":{"id":"BrUru8FmfHLU","executionInfo":{"status":"ok","timestamp":1749490280850,"user_tz":-420,"elapsed":13,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":109,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eexKZLwXV5-X","outputId":"4bcc282c-2588-4627-c364-df69fa5b0608","executionInfo":{"status":"ok","timestamp":1749490284903,"user_tz":-420,"elapsed":4038,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":110,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","metadata":{"id":"-TN20NySi_CF"},"source":["# **2. Load Dataset**"]},{"cell_type":"code","execution_count":111,"metadata":{"id":"TEFdPqMgFrA6","executionInfo":{"status":"ok","timestamp":1749490284913,"user_tz":-420,"elapsed":17,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"outputs":[],"source":["mainPath =  '/content/drive/MyDrive/Colab Notebooks/Capstone - Course Recommender Systems/' # Path of the main project\n","dataPath = os.path.join(mainPath, 'Dataset/') # Path of the dataset\n","checkpoint_dir = os.path.join(mainPath, 'Model/2. Content-Based Filtering/')"]},{"cell_type":"code","execution_count":112,"metadata":{"id":"Myjf2w6Ei9qA","executionInfo":{"status":"ok","timestamp":1749490284989,"user_tz":-420,"elapsed":36,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"outputs":[],"source":["# Load the CSV file from the URL\n","df_courses = pd.read_csv(dataPath + 'udemy_courses_new.csv')\n","# Amankan salinan aslinya untuk Inference\n","df_courses_raw = df_courses.copy()"]},{"cell_type":"code","source":["# üîÅ Load scaler hasil training\n","scaler_path = os.path.join(checkpoint_dir, \"scaler.pkl\")\n","with open(scaler_path, \"rb\") as f:\n","    scaler = pickle.load(f)\n","\n","# üìä Normalisasi fitur numerik menggunakan scaler dari training\n","numerical_features = ['price', 'num_subscribers', 'num_reviews', 'num_lectures', 'content_duration']\n","df_courses[numerical_features] = scaler.transform(df_courses[numerical_features])"],"metadata":{"id":"Lz88jmgnp1pv","executionInfo":{"status":"ok","timestamp":1749490285071,"user_tz":-420,"elapsed":40,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":113,"outputs":[]},{"cell_type":"markdown","source":["## **3.10 Load dan Inference**"],"metadata":{"id":"iXxHcb0_QgkE"}},{"cell_type":"code","source":["class CourseModel(tf.keras.Model):\n","    def __init__(self, embedding_dim, subject_vocab, level_vocab, course_ids, vectorizer_path=None):\n","        super().__init__()\n","\n","        # Embedding categorical features\n","        self.course_embedding = tf.keras.Sequential([\n","            tf.keras.layers.StringLookup(vocabulary=course_ids, mask_token=None),\n","            tf.keras.layers.Embedding(len(course_ids) + 1, embedding_dim)\n","        ])\n","\n","        self.subject_embedding = tf.keras.Sequential([\n","            tf.keras.layers.StringLookup(vocabulary=subject_vocab, mask_token=None),\n","            tf.keras.layers.Embedding(len(subject_vocab) + 1, max(4, embedding_dim // 4))\n","        ])\n","\n","        self.level_embedding = tf.keras.Sequential([\n","            tf.keras.layers.StringLookup(vocabulary=level_vocab, mask_token=None),\n","            tf.keras.layers.Embedding(len(level_vocab) + 1, max(2, embedding_dim // 8))\n","        ])\n","\n","        # ‚¨áÔ∏è Perbedaan penting ada di sini\n","        if vectorizer_path:\n","            # Inference mode: load saved vectorizer\n","            self.title_vectorizer = tf.keras.models.load_model(vectorizer_path, compile=False)\n","        else:\n","            # Training mode: adapt vectorizer\n","            self.title_vectorizer = tf.keras.layers.TextVectorization(max_tokens=1000, output_mode='tf-idf')\n","            self.title_vectorizer.adapt(df_courses[\"course_title\"].astype(str).tolist())\n","\n","        self.title_embedding = tf.keras.Sequential([\n","            self.title_vectorizer,\n","            tf.keras.layers.Dense(embedding_dim, activation=\"relu\"),\n","        ])\n","\n","        self.numerical_dense = tf.keras.Sequential([\n","            tf.keras.layers.Dense(embedding_dim // 4, activation=\"relu\"),\n","            tf.keras.layers.Dense(embedding_dim // 8, activation=\"relu\"),\n","        ])\n","\n","        self.final_dense1 = tf.keras.layers.Dense(embedding_dim * 2, activation=\"relu\")\n","        self.final_dense2 = tf.keras.layers.Dense(embedding_dim)\n","\n","    def call(self, inputs):\n","        title = inputs[\"course_title\"]\n","\n","        # Gabungkan fitur numerik dalam satu tensor\n","        numerical = tf.stack([\n","            inputs[\"price\"],\n","            inputs[\"num_subscribers\"],\n","            inputs[\"num_reviews\"],\n","            inputs[\"num_lectures\"],\n","            inputs[\"content_duration\"],\n","        ], axis=1)\n","\n","        # Dapatkan embedding masing-masing fitur\n","        course_emb = self.course_embedding(inputs[\"course_id\"])\n","        subject_emb = self.subject_embedding(inputs[\"subject\"])\n","        level_emb = self.level_embedding(inputs[\"level\"])\n","        title_emb = self.title_embedding(title)\n","        numerical_emb = self.numerical_dense(numerical)\n","\n","        # ‚ö° Concatenate semua embedding jadi satu vector feature\n","        concat = tf.concat([course_emb, subject_emb, level_emb, title_emb, numerical_emb], axis=1)\n","\n","        x = self.final_dense1(concat)\n","        return self.final_dense2(x)  # Output embedding final untuk course"],"metadata":{"id":"gna4A5r4Hx7M","executionInfo":{"status":"ok","timestamp":1749490285094,"user_tz":-420,"elapsed":12,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":114,"outputs":[]},{"cell_type":"code","source":["# Load necessary components to initialize the model\n","with open(os.path.join(checkpoint_dir, \"course_ids.pkl\"), \"rb\") as f:\n","    loaded_course_ids = pickle.load(f)\n","\n","# Load subject and level vocab if needed (if they were saved)\n","with open(os.path.join(checkpoint_dir, \"subject_vocab.pkl\"), \"rb\") as f:\n","    loaded_subject_vocab = pickle.load(f)\n","\n","with open(os.path.join(checkpoint_dir, \"level_vocab.pkl\"), \"rb\") as f:\n","    loaded_level_vocab = pickle.load(f)"],"metadata":{"id":"oF2fb4zUUvAp","executionInfo":{"status":"ok","timestamp":1749490285104,"user_tz":-420,"elapsed":16,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":115,"outputs":[]},{"cell_type":"code","source":["vectorizer_path = os.path.join(checkpoint_dir, \"title_vectorizer_model\")\n","\n","# Now load the model by passing the correct arguments\n","loaded_model = CourseModel(\n","    embedding_dim=64,  # match the embedding_dim used during training\n","    subject_vocab=loaded_subject_vocab,  # load subject vocab from the saved file\n","    level_vocab=loaded_level_vocab,  # load level vocab from the saved file\n","    course_ids=loaded_course_ids,  # load course IDs from the saved file\n","    vectorizer_path=vectorizer_path  # ‚¨ÖÔ∏è Ini penting\n",")\n","\n","# Compile the loaded model as done during training\n","loaded_model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.0008901416500660483))\n","\n","# Load the model weights\n","loaded_model.load_weights(os.path.join(checkpoint_dir + \"model weights/\", \"model_weights\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fexhU6qpU3K7","executionInfo":{"status":"ok","timestamp":1749490285876,"user_tz":-420,"elapsed":732,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}},"outputId":"22efffec-a2e2-4794-cbfe-ebc36814a581"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.checkpoint.checkpoint.CheckpointLoadStatus at 0x7821f815ac10>"]},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["print(\"\\nüß™ Cek vectorizer output:\")\n","sample_titles = [\"Mutual Funds for Investors in Retirement Accounts\",\n","                 \"Build Your First Website in 1 Week with HTML5 and CSS3\"]\n","print(loaded_model.title_vectorizer(tf.constant(sample_titles)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5N-YhLUUcs77","executionInfo":{"status":"ok","timestamp":1749490285987,"user_tz":-420,"elapsed":104,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}},"outputId":"09d3d000-7170-4af1-be29-423eb2a1e53e"},"execution_count":117,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","üß™ Cek vectorizer output:\n","tf.Tensor(\n","[[0.        0.        1.993607  ... 0.        0.        0.       ]\n"," [5.8614764 0.        0.        ... 0.        0.        0.       ]], shape=(2, 1000), dtype=float32)\n"]}]},{"cell_type":"code","source":["def make_tf_dataset(df, shuffle=True, batch_size=64):\n","    ds = tf.data.Dataset.from_tensor_slices({\n","        \"course_id\": df[\"course_id\"].astype(str).values,\n","        \"course_title\": df[\"course_title\"].astype(str).values.reshape(-1),\n","        \"subject\": df[\"subject\"].astype(str).values,\n","        \"level\": df[\"level\"].astype(str).values,\n","        \"price\": df[\"price\"].astype(\"float32\").values,\n","        \"num_subscribers\": df[\"num_subscribers\"].astype(\"float32\").values,\n","        \"num_reviews\": df[\"num_reviews\"].astype(\"float32\").values,\n","        \"num_lectures\": df[\"num_lectures\"].astype(\"float32\").values,\n","        \"content_duration\": df[\"content_duration\"].astype(\"float32\").values,\n","    })\n","    if shuffle:\n","        ds = ds.shuffle(1000)\n","    ds = ds.batch(batch_size).cache().prefetch(tf.data.AUTOTUNE)\n","    return ds\n","\n","tf_all_courses = make_tf_dataset(df_courses, batch_size=64, shuffle=False)"],"metadata":{"id":"qxBuFUsCH90y","executionInfo":{"status":"ok","timestamp":1749490286031,"user_tz":-420,"elapsed":37,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":118,"outputs":[]},{"cell_type":"code","source":["loaded_index = tfrs.layers.factorized_top_k.BruteForce(loaded_model)\n","loaded_index.index_from_dataset(\n","    tf_all_courses.map(lambda x: (x[\"course_id\"], loaded_model(x)))\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5DiUWIcLfJWF","executionInfo":{"status":"ok","timestamp":1749490286324,"user_tz":-420,"elapsed":300,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}},"outputId":"0e563f71-cd94-42d4-e739-255dc9607341"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tensorflow_recommenders.layers.factorized_top_k.BruteForce at 0x7821f8149490>"]},"metadata":{},"execution_count":119}]},{"cell_type":"markdown","source":["### **3.10.1 Inference with Course ID**"],"metadata":{"id":"4a29lDY1YlR6"}},{"cell_type":"code","source":["def lookup_course(course_id_str):\n","    \"\"\"Ambil dictionary fitur untuk 1 course berdasarkan ID string\"\"\"\n","    row = df_courses[df_courses[\"course_id\"].astype(str) == course_id_str].iloc[0]\n","    return {\n","        \"course_id\": tf.constant([str(row[\"course_id\"])]),\n","        \"course_title\": tf.constant([str(row[\"course_title\"])]),\n","        \"subject\": tf.constant([str(row[\"subject\"])]),\n","        \"level\": tf.constant([str(row[\"level\"])]),\n","        \"price\": tf.constant([row[\"price\"]], dtype=tf.float32),\n","        \"num_subscribers\": tf.constant([row[\"num_subscribers\"]], dtype=tf.float32),\n","        \"num_reviews\": tf.constant([row[\"num_reviews\"]], dtype=tf.float32),\n","        \"num_lectures\": tf.constant([row[\"num_lectures\"]], dtype=tf.float32),\n","        \"content_duration\": tf.constant([row[\"content_duration\"]], dtype=tf.float32),\n","    }\n","\n","print(\"‚úÖ Sistem rekomendasi telah siap digunakan!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tAMV_F-Cu1gS","executionInfo":{"status":"ok","timestamp":1749490286370,"user_tz":-420,"elapsed":39,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}},"outputId":"cf4260e7-ca04-4eb7-ddfc-93267ba56f45"},"execution_count":120,"outputs":[{"output_type":"stream","name":"stdout","text":["‚úÖ Sistem rekomendasi telah siap digunakan!\n"]}]},{"cell_type":"code","source":["# --------------------------------------------------\n","# INTERAKSI DENGAN USER UNTUK MEMASUKKAN COURSE ID\n","\n","while True:\n","    print(\"\\nüì• Masukkan `course_id` untuk melihat rekomendasi (atau ketik 'exit' untuk keluar):\")\n","    user_input = input(\">> \")\n","\n","    if user_input.lower() == \"exit\":\n","        print(\"\\nüëã Terima kasih! Program selesai.\")\n","        break\n","\n","    # Validasi input course ID\n","    if user_input not in df_courses[\"course_id\"].astype(str).values:\n","        print(\"‚ö†Ô∏è  Course ID tidak ditemukan. Coba lagi dengan ID yang tersedia.\\n\")\n","        print(\"üÜî Course ID yang tersedia:\", df_courses['course_id'].tolist())\n","        continue\n","\n","    # Tampilkan info course yang dijadikan query\n","    course_row = df_courses_raw[df_courses_raw[\"course_id\"].astype(str) == user_input].iloc[0]\n","    print(\"\\nüîç Course yang dijadikan dasar rekomendasi:\")\n","    print(f\"   üìò ID        : {course_row['course_id']}\")\n","    print(f\"   üìö Title     : {course_row['course_title']}\")\n","    print(f\"   üß© Subject   : {course_row['subject']}\")\n","    print(f\"   üéØ Level     : {course_row['level']}\")\n","    print(f\"   üí∞ Price     : {course_row['price']}\")\n","    print(f\"   üë• Subscribers: {course_row['num_subscribers']}\\n\")\n","\n","    # Cari rekomendasi\n","    query_features = lookup_course(user_input)\n","    # scores, ids = loaded_index(query_features, k=len(df_courses))\n","    scores, ids = loaded_index(query_features, k=5)\n","\n","    print(\"üìé Rekomendasi berdasarkan course tersebut:\")\n","    for score, course_id in zip(scores[0].numpy(), ids[0].numpy()):\n","        course_id_str = course_id.decode('utf-8')\n","        recommended = df_courses_raw[df_courses_raw[\"course_id\"].astype(str) == course_id_str].iloc[0]\n","        print(f\"   üîó Course ID: {course_id_str} | üìò Title: {recommended['course_title']} | ‚≠ê Skor: {score:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3e7adde3-05c2-4c17-b270-ef37642e4665","id":"_DcYZbQpVBGg","executionInfo":{"status":"ok","timestamp":1749490414041,"user_tz":-420,"elapsed":126040,"user":{"displayName":"Rendika Nurhartanto Suharto A121YBM420","userId":"02290268034004690139"}}},"execution_count":121,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","üì• Masukkan `course_id` untuk melihat rekomendasi (atau ketik 'exit' untuk keluar):\n",">> 1228708\n","\n","üîç Course yang dijadikan dasar rekomendasi:\n","   üìò ID        : 1228708\n","   üìö Title     : Learn Adobe Illustrator and Premiere Pro in 1 hour\n","   üß© Subject   : Graphic Design\n","   üéØ Level     : All Levels\n","   üí∞ Price     : 20\n","   üë• Subscribers: 1\n","\n","üìé Rekomendasi berdasarkan course tersebut:\n","   üîó Course ID: 801702 | üìò Title: Geld verdienen mit dem Ticken der Uhr, wie Warren Buffett! | ‚≠ê Skor: 6.5983\n","   üîó Course ID: 149716 | üìò Title: Learn to Play Fernando Sor's 'Study in B minor\",https://www.udemy.com/study-in-b-minor/,true,115,1403,5,9,Intermediate Level,43 mins,2014-01-27T20:58:16Z\n","398746,Piano: The Chord Based System - Learn To Play As The Pros Do\" | ‚≠ê Skor: 6.3405\n","   üîó Course ID: 1201912 | üìò Title: high swing - ŸÉŸàÿ±ÿ≥ ŸÑÿ™ÿπŸÑŸäŸÖ ÿ¨ŸÖŸäÿπ ŸÖÿ±ÿßÿ≠ŸÑ ÿßÿ≠ÿ™ÿ±ÿßŸÅ ÿ™ÿØÿßŸàŸÑ ÿßŸÑŸÅŸàÿ±ŸÉÿ≥ | ‚≠ê Skor: 6.2726\n","   üîó Course ID: 52118 | üìò Title: Multiply your returns using 'Value Investing\",https://www.udemy.com/multiply-your-returns-using-value-investing/,true,20,1942,19,63,All Levels,4.5 hours,2015-07-23T00:08:33Z\n","874284,Weekly Forex Analysis by Baraq FX\" | ‚≠ê Skor: 6.2491\n","   üîó Course ID: 410196 | üìò Title: DIY: Reduce Unpaid Federal Tax thru  IRS Offer in Compromise | ‚≠ê Skor: 5.9659\n","\n","üì• Masukkan `course_id` untuk melihat rekomendasi (atau ketik 'exit' untuk keluar):\n",">> 1004512\n","\n","üîç Course yang dijadikan dasar rekomendasi:\n","   üìò ID        : 1004512\n","   üìö Title     : Clipping Masks & Shaped images in Adobe Photoshop CC\n","   üß© Subject   : Graphic Design\n","   üéØ Level     : All Levels\n","   üí∞ Price     : 90\n","   üë• Subscribers: 1905\n","\n","üìé Rekomendasi berdasarkan course tersebut:\n","   üîó Course ID: 801702 | üìò Title: Geld verdienen mit dem Ticken der Uhr, wie Warren Buffett! | ‚≠ê Skor: 14.0629\n","   üîó Course ID: 149716 | üìò Title: Learn to Play Fernando Sor's 'Study in B minor\",https://www.udemy.com/study-in-b-minor/,true,115,1403,5,9,Intermediate Level,43 mins,2014-01-27T20:58:16Z\n","398746,Piano: The Chord Based System - Learn To Play As The Pros Do\" | ‚≠ê Skor: 13.9907\n","   üîó Course ID: 410196 | üìò Title: DIY: Reduce Unpaid Federal Tax thru  IRS Offer in Compromise | ‚≠ê Skor: 13.2235\n","   üîó Course ID: 1201912 | üìò Title: high swing - ŸÉŸàÿ±ÿ≥ ŸÑÿ™ÿπŸÑŸäŸÖ ÿ¨ŸÖŸäÿπ ŸÖÿ±ÿßÿ≠ŸÑ ÿßÿ≠ÿ™ÿ±ÿßŸÅ ÿ™ÿØÿßŸàŸÑ ÿßŸÑŸÅŸàÿ±ŸÉÿ≥ | ‚≠ê Skor: 13.1160\n","   üîó Course ID: 1169188 | üìò Title: Energiespar-Formel // Mehr Geld durch Wasser sparen Zuhause | ‚≠ê Skor: 12.8058\n","\n","üì• Masukkan `course_id` untuk melihat rekomendasi (atau ketik 'exit' untuk keluar):\n",">> exit\n","\n","üëã Terima kasih! Program selesai.\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"a7s-ZO3mIEsZ"},"execution_count":null,"outputs":[]}]}